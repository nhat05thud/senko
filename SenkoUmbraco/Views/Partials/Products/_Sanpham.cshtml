@inherits UmbracoTemplatePage
@{
    var current = CurrentPage;
    var child = current.Children().Where("Visible");
    const int pageSize = 12;
    int page; int.TryParse(Request.QueryString["page"], out page);
    var totalPages = (int)Math.Ceiling((double)child.Count() / pageSize);

    if (page > totalPages)
    {
        page = totalPages;
    }
    else if (page < 1)
    {
        page = 1;
    }
}
@foreach (var item in child.Skip((page - 1) * pageSize).Take(pageSize))
{
    var thumb = Umbraco.TypedMedia(item.GetPropertyValue<int>("image"));
    <div class="item col-md-3 col-sm-6 col-xs-12">
        <div class="wrap-item">
            <a href="@item.Url">
                <img class="lazy" data-original="@(thumb != null ? string.Format("{0}?anchor={1}&width={2}&height={3}&mode={4}&bgcolor={5}&slimmage={6}&rnd={7:ddMMyyyhhmmss}", thumb.Url, "center", 255, 265,"boxpad","fff", true, item.UpdateDate) : "")" alt="" />
                <div class="info">
                    <span class="title">@item.Parent().Name</span>
                    <span class="code">@item.Name</span>
                </div>
            </a>
        </div>
    </div>
}
<div class="clr"></div>
@if (totalPages > 1)
{
    <div class="pagination-container">
        <ul class="pagination">
            @if (page > 1)
            {
                <li class="PagedList-skipToPrevious"><a href="?page=@(page-1)">«</a></li>
            }
            @for (int p = 1; p < totalPages + 1; p++)
            {
                <li class="@(p == page ? "active" : string.Empty)">
                    <a href="?page=@p">@p</a>
                </li>
            }
            @if (page < totalPages)
            {
                <li class="PagedList-skipToNext"><a href="?page=@(page+1)">»</a></li>
            }
        </ul>
    </div>
}